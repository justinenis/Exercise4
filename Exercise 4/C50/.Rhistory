file_list = append(file_list, files_to_add)
labels_train = append(labels_train, rep(author_name, length(files_to_add)))
}
all_txt = lapply(file_list, readerPlain)
mynames = file_list %>%
{ strsplit(as.character(., '/', fixed=TRUE)) } %>%
{ lapply(., tail, n=2) } %>%
{ lapply(., paste0, collapse = '') } %>%
unlist
# Remember to source in the "reader" wrapper function
# it's stored as a Github gist at:
# https://gist.github.com/jgscott/28d9d1287a0c3c1477e2113f6758d5ff
readerPlain = function(fname){
readPlain(elem=list(content=readLines(fname)), id=fname, language='en') }
## Rolling two directories together into a single training corpus
train_dirs = Sys.glob('../C50/C50train/*')
file_list = NULL
labels_train = NULL
for(author in train_dirs) {
author_name = substring(author, first=17)
files_to_add = Sys.glob(paste0(author, '/*.txt'))
file_list = append(file_list, files_to_add)
labels_train = append(labels_train, rep(author_name, length(files_to_add)))
}
all_txt = lapply(file_list, readerPlain)
mynames = as.character(file_list) %>%
{ strsplit(., '/', fixed=TRUE) } %>%
{ lapply(., tail, n=2) } %>%
{ lapply(., paste0, collapse = '') } %>%
unlist
names(all_txt) = mynames
names(all_txt) = sub('.txt', '', names(all_txt))
corpus_train = Corpus(VectorSource(all_txt))
corpus_train = corpus_train %>%
tm_map(., content_transformer(tolower)) %>%
tm_map(., content_transformer(removeNumbers)) %>%
tm_map(., content_transformer(removeNumbers)) %>%
tm_map(., content_transformer(removePunctuation)) %>%
tm_map(., content_transformer(stripWhitespace)) %>%
tm_map(., content_transformer(removeWords), stopwords("SMART"))
DTM_train<-cbind(DTM_train,labels_train)
DTM_train = DocumentTermMatrix(corpus_train, control = list(weighting = weightTfIdf, bounds = list(global = c(1, Inf))))
DTM_train = removeSparseTerms(DTM_train, 0.95)
DTM_train
DTM_train = as.matrix(DTM_train)
DTM_train = as.data.frame(DTM_train)
DTM_test = DocumentTermMatrix(corpus_test, control=list( weighting = weightTfIdf, bounds = list(global = c(1, Inf))))
DTM_test = removeSparseTerms(DTM_test, 0.95)
DTM_test
DTM_test = as.matrix(DTM_test)
DTM_test = as.data.frame(DTM_test)
DTM_train<-cbind(DTM_train,labels_train)
DTM_test<-cbind(DTM_test,labels_test)
naive_bayes = naiveBayes(as.factor(labels_train) ~ ., DTM_train)
DTM_train = DocumentTermMatrix(corpus_train, control = list(weighting = weightTfIdf, bounds = list(global = c(1, Inf))))
DTM_train = removeSparseTerms(DTM_train, 0.95)
DTM_train
DTM_train = as.matrix(DTM_train)
DTM_train = as.data.frame(DTM_train)
DTM_test = DocumentTermMatrix(corpus_test, control=list( weighting = weightTfIdf, bounds = list(global = c(1, Inf))))
DTM_test = removeSparseTerms(DTM_test, 0.95)
DTM_test
DTM_test = as.matrix(DTM_test)
DTM_test = as.data.frame(DTM_test)
DTM_train<-cbind(DTM_train,labels_train)
DTM_test<-cbind(DTM_test,labels_test)
naive_bayes = naiveBayes(as.factor(labels_train) ~ DTM_test, data =DTM_train)
DTM_train = DocumentTermMatrix(corpus_train, control = list(weighting = weightTfIdf, bounds = list(global = c(1, Inf))))
DTM_train = removeSparseTerms(DTM_train, 0.95)
DTM_train
DTM_train = as.matrix(DTM_train)
DTM_train = as.data.frame(DTM_train)
DTM_test = DocumentTermMatrix(corpus_test, control=list( weighting = weightTfIdf, bounds = list(global = c(1, Inf))))
DTM_test = removeSparseTerms(DTM_test, 0.95)
DTM_test
DTM_test = as.matrix(DTM_test)
DTM_test = as.data.frame(DTM_test)
DTM_train<-cbind(DTM_train,labels_train)
DTM_test<-cbind(DTM_test,labels_test)
naive_bayes = naiveBayes(as.factor(labels_train) ~ DTM_test, data =DTM_train)
DTM_train = DocumentTermMatrix(corpus_train, control = list(weighting = weightTfIdf, bounds = list(global = c(5, Inf))))
DTM_train = removeSparseTerms(DTM_train, 0.95)
DTM_train
DTM_train = as.matrix(DTM_train)
DTM_train = as.data.frame(DTM_train)
DTM_test = DocumentTermMatrix(corpus_test, control=list( weighting = weightTfIdf, bounds = list(global = c(5, Inf))))
DTM_test = removeSparseTerms(DTM_test, 0.95)
DTM_test
DTM_test = as.matrix(DTM_test)
DTM_test = as.data.frame(DTM_test)
DTM_train<-cbind(DTM_train,labels_train)
DTM_test<-cbind(DTM_test,labels_test)
naive_bayes = naiveBayes(as.factor(labels_train) ~ DTM_test, data =DTM_train)
DTM_train = DocumentTermMatrix(corpus_train, control = list(weighting = weightTfIdf, bounds = list(global = c(5, Inf))))
DTM_train = removeSparseTerms(DTM_train, 0.95)
DTM_train
DTM_train = as.matrix(DTM_train)
DTM_train = as.data.frame(DTM_train)
DTM_test = DocumentTermMatrix(corpus_test, control=list( weighting = weightTfIdf, bounds = list(global = c(5, Inf))))
DTM_test = removeSparseTerms(DTM_test, 0.95)
DTM_test
DTM_test = as.matrix(DTM_test)
DTM_test = as.data.frame(DTM_test)
DTM_train<-cbind(DTM_train,labels_train)
DTM_test<-cbind(DTM_test,labels_test)
naive_bayes = naiveBayes(as.factor(labels_train) ~ DTM_test, data = DTM_train)
DTM_train = DocumentTermMatrix(corpus_train, control = list(weighting = weightTfIdf, bounds = list(global = c(5, Inf))))
DTM_train = removeSparseTerms(DTM_train, 0.95)
DTM_train
DTM_train = as.matrix(DTM_train)
DTM_train = as.data.frame(DTM_train)
DTM_test = DocumentTermMatrix(corpus_test, control=list( weighting = weightTfIdf, bounds = list(global = c(5, Inf))))
DTM_test = removeSparseTerms(DTM_test, 0.95)
DTM_test
DTM_test = as.matrix(DTM_test)
DTM_test = as.data.frame(DTM_test)
DTM_train<-cbind(DTM_train,labels_train)
DTM_test<-cbind(DTM_test,labels_test)
naive_bayes = naiveBayes(labels_train ~ DTM_test, data = DTM_train)
DTM_train = DocumentTermMatrix(corpus_train, control = list(weighting = weightTfIdf, bounds = list(global = c(5, Inf))))
DTM_train = removeSparseTerms(DTM_train, 0.95)
DTM_train
DTM_train = as.matrix(DTM_train)
DTM_train = as.data.frame(DTM_train)
DTM_test = DocumentTermMatrix(corpus_test, control=list( weighting = weightTfIdf, bounds = list(global = c(5, Inf))))
DTM_test = removeSparseTerms(DTM_test, 0.95)
DTM_test
DTM_test = as.matrix(DTM_test)
DTM_test = as.data.frame(DTM_test)
DTM_train<-cbind(DTM_train,labels_train)
DTM_test<-cbind(DTM_test,labels_test)
naive_bayes = naiveBayes(as.factor(labels_train) ~ DTM_test, data = DTM_train))
DTM_train = DocumentTermMatrix(corpus_train, control = list(weighting = weightTfIdf, bounds = list(global = c(5, Inf))))
DTM_train = removeSparseTerms(DTM_train, 0.95)
DTM_train
DTM_train = as.matrix(DTM_train)
DTM_train = as.data.frame(DTM_train)
DTM_test = DocumentTermMatrix(corpus_test, control=list( weighting = weightTfIdf, bounds = list(global = c(5, Inf))))
DTM_test = removeSparseTerms(DTM_test, 0.95)
DTM_test
DTM_test = as.matrix(DTM_test)
DTM_test = as.data.frame(DTM_test)
DTM_train<-cbind(DTM_train,labels_train)
DTM_test<-cbind(DTM_test,labels_test)
naive_bayes = naiveBayes(as.factor(labels_train) ~ DTM_test, data = DTM_train)
DTM_train = DocumentTermMatrix(corpus_train, control = list(weighting = weightTfIdf, bounds = list(global = c(5, Inf))))
DTM_train = removeSparseTerms(DTM_train, 0.95)
DTM_train
DTM_train = as.matrix(DTM_train)
DTM_train = as.data.frame(DTM_train)
DTM_test = DocumentTermMatrix(corpus_test, control=list( weighting = weightTfIdf, bounds = list(global = c(5, Inf))))
DTM_test = removeSparseTerms(DTM_test, 0.95)
DTM_test
DTM_test = as.matrix(DTM_test)
DTM_test = as.data.frame(DTM_test)
DTM_train<-cbind(DTM_train,labels_train)
DTM_test<-cbind(DTM_test,labels_test)
naive_bayes = naiveBayes(str(labels_train) ~ DTM_test, data = DTM_train)
DTM_train = DocumentTermMatrix(corpus_train, control = list(weighting = weightTfIdf, bounds = list(global = c(5, Inf))))
DTM_train = removeSparseTerms(DTM_train, 0.95)
DTM_train
DTM_train = as.matrix(DTM_train)
DTM_train = as.data.frame(DTM_train)
DTM_test = DocumentTermMatrix(corpus_test, control=list( weighting = weightTfIdf, bounds = list(global = c(5, Inf))))
DTM_test = removeSparseTerms(DTM_test, 0.95)
DTM_test
DTM_test = as.matrix(DTM_test)
DTM_test = as.data.frame(DTM_test)
DTM_train<-cbind(DTM_train,labels_train)
DTM_test<-cbind(DTM_test,labels_test)
naive_bayes = naiveBayes(str(as.fcator(labels_train)) ~ DTM_test, data = DTM_train)
DTM_train = DocumentTermMatrix(corpus_train, control = list(weighting = weightTfIdf, bounds = list(global = c(5, Inf))))
DTM_train = removeSparseTerms(DTM_train, 0.95)
DTM_train
DTM_train = as.matrix(DTM_train)
DTM_train = as.data.frame(DTM_train)
DTM_test = DocumentTermMatrix(corpus_test, control=list( weighting = weightTfIdf, bounds = list(global = c(5, Inf))))
DTM_test = removeSparseTerms(DTM_test, 0.95)
DTM_test
DTM_test = as.matrix(DTM_test)
DTM_test = as.data.frame(DTM_test)
DTM_train<-cbind(DTM_train,labels_train)
DTM_test<-cbind(DTM_test,labels_test)
naive_bayes = naiveBayes(str(as.factor(labels_train)) ~ DTM_test, data = DTM_train))
DTM_train = DocumentTermMatrix(corpus_train, control = list(weighting = weightTfIdf, bounds = list(global = c(5, Inf))))
DTM_train = removeSparseTerms(DTM_train, 0.95)
DTM_train
DTM_train = as.matrix(DTM_train)
DTM_train = as.data.frame(DTM_train)
DTM_test = DocumentTermMatrix(corpus_test, control=list( weighting = weightTfIdf, bounds = list(global = c(5, Inf))))
DTM_test = removeSparseTerms(DTM_test, 0.95)
DTM_test
DTM_test = as.matrix(DTM_test)
DTM_test = as.data.frame(DTM_test)
DTM_train<-cbind(DTM_train,labels_train)
DTM_test<-cbind(DTM_test,labels_test)
naive_bayes = lm(as.factor(labels_train) ~ DTM_test, data = DTM_train)
DTM_train = DocumentTermMatrix(corpus_train, control = list(weighting = weightTfIdf, bounds = list(global = c(5, Inf))))
DTM_train = removeSparseTerms(DTM_train, 0.95)
DTM_train
DTM_train = as.matrix(DTM_train)
DTM_train = as.data.frame(DTM_train)
DTM_test = DocumentTermMatrix(corpus_test, control=list( weighting = weightTfIdf, bounds = list(global = c(5, Inf))))
DTM_test = removeSparseTerms(DTM_test, 0.95)
DTM_test
DTM_test = as.matrix(DTM_test)
DTM_test = as.data.frame(DTM_test)
DTM_train = cbind(DTM_train,labels_train)
DTM_test = cbind(DTM_test,labels_test)
naive_bayes = naiveBayes(as.factor(labels_train) ~ ., data = DTM_train)
DTM_train = DocumentTermMatrix(corpus_train, control = list(weighting = weightTfIdf, bounds = list(global = c(5, Inf))))
DTM_train = removeSparseTerms(DTM_train, 0.95)
DTM_train
DTM_train = as.matrix(DTM_train)
DTM_train = as.data.frame(DTM_train)
DTM_test = DocumentTermMatrix(corpus_test, control=list( weighting = weightTfIdf, bounds = list(global = c(5, Inf))))
DTM_test = removeSparseTerms(DTM_test, 0.95)
DTM_test
DTM_test = as.matrix(DTM_test)
DTM_test = as.data.frame(DTM_test)
DTM_train = cbind(DTM_train,labels_train)
DTM_test = cbind(DTM_test,labels_test)
naive_bayes = naiveBayes(as.factor(labels_train) ~ DTM_test, data = DTM_train)
library(ggplot2)
library(tidyverse)
library(rsample)
library(dbplyr)
library(LICORS)
library(foreach)
library(mosaic)
library(mvtnorm)
library(NbClust)
library(cluster)
library(dendextend)
library(factoextra)
library(tm)
library(gamlr)
library(SnowballC)
library(slam)
library(proxy)
library(igraph)
library(arules)
library(arulesViz)
library(pander)
library(e1071)
library(naivebayes)
library(magrittr)
library(doParallel)
library(plyr)
DTM_train = DocumentTermMatrix(corpus_train, control = list(weighting = weightTfIdf, bounds = list(global = c(5, Inf))))
DTM_train = removeSparseTerms(DTM_train, 0.95)
DTM_train
DTM_train = as.matrix(DTM_train)
DTM_train = as.data.frame(DTM_train)
DTM_test = DocumentTermMatrix(corpus_test, control=list( weighting = weightTfIdf, bounds = list(global = c(5, Inf))))
DTM_test = removeSparseTerms(DTM_test, 0.95)
DTM_test
DTM_test = as.matrix(DTM_test)
DTM_test = as.data.frame(DTM_test)
DTM_train = cbind(DTM_train,labels_train)
DTM_test = cbind(DTM_test,labels_test)
naive_bayes = naiveBayes(str(labels_train) ~ DTM_test, data = DTM_train)
DTM_train = DocumentTermMatrix(corpus_train, control = list(weighting = weightTfIdf, bounds = list(global = c(5, Inf))))
DTM_train = removeSparseTerms(DTM_train, 0.95)
DTM_train
DTM_train = as.matrix(DTM_train)
DTM_train = as.data.frame(DTM_train)
DTM_test = DocumentTermMatrix(corpus_test, control=list( weighting = weightTfIdf, bounds = list(global = c(5, Inf))))
DTM_test = removeSparseTerms(DTM_test, 0.95)
DTM_test
DTM_test = as.matrix(DTM_test)
DTM_test = as.data.frame(DTM_test)
DTM_train = cbind(DTM_train,labels_train)
DTM_test = cbind(DTM_test,labels_test)
naive_bayes = naiveBayes(labels_train ~ DTM_test, data = DTM_train)
type(labels_train)
DTM_train = DocumentTermMatrix(corpus_train, control = list(weighting = weightTfIdf, bounds = list(global = c(5, Inf))))
DTM_train = removeSparseTerms(DTM_train, 0.95)
DTM_train
DTM_train = as.matrix(DTM_train)
DTM_train = as.data.frame(DTM_train)
DTM_test = DocumentTermMatrix(corpus_test, control=list( weighting = weightTfIdf, bounds = list(global = c(5, Inf))))
DTM_test = removeSparseTerms(DTM_test, 0.95)
DTM_test
DTM_test = as.matrix(DTM_test)
DTM_test = as.data.frame(DTM_test)
DTM_train = cbind(DTM_train,labels_train)
DTM_test = cbind(DTM_test,labels_test)
labels_train = str(labels_train)
naive_bayes = naiveBayes(labels_train ~ DTM_test, data = DTM_train)
DTM_train = DocumentTermMatrix(corpus_train, control = list(weighting = weightTfIdf, bounds = list(global = c(5, Inf))))
DTM_train = removeSparseTerms(DTM_train, 0.95)
DTM_train
DTM_train = as.matrix(DTM_train)
DTM_train = as.data.frame(DTM_train)
DTM_test = DocumentTermMatrix(corpus_test, control=list( weighting = weightTfIdf, bounds = list(global = c(5, Inf))))
DTM_test = removeSparseTerms(DTM_test, 0.95)
DTM_test
DTM_test = as.matrix(DTM_test)
DTM_test = as.data.frame(DTM_test)
DTM_train = cbind(DTM_train,labels_train)
DTM_test = cbind(DTM_test,labels_test)
labels_train = str(DTM_train$labels_train)
naive_bayes = naiveBayes(labels_train ~ DTM_test, data = DTM_train)
DTM_train = DocumentTermMatrix(corpus_train, control = list(weighting = weightTfIdf, bounds = list(global = c(5, Inf))))
DTM_train = removeSparseTerms(DTM_train, 0.95)
DTM_train
DTM_train = as.matrix(DTM_train)
DTM_train = as.data.frame(DTM_train)
DTM_test = DocumentTermMatrix(corpus_test, control=list( weighting = weightTfIdf, bounds = list(global = c(5, Inf))))
DTM_test = removeSparseTerms(DTM_test, 0.95)
DTM_test
DTM_test = as.matrix(DTM_test)
DTM_test = as.data.frame(DTM_test)
DTM_train = cbind(DTM_train,labels_train)
DTM_test = cbind(DTM_test,labels_test)
labels_train = str(DTM_train$labels_train)
naive_bayes = naiveBayes(labels_train ~ DTM_test, data = DTM_train)
naive_bayes = naiveBayes(as.factor(labels_train) ~ DTM_test, data = DTM_train))
DTM_train = DocumentTermMatrix(corpus_train, control = list(weighting = weightTfIdf, bounds = list(global = c(5, Inf))))
DTM_train = removeSparseTerms(DTM_train, 0.95)
DTM_train
DTM_train = as.matrix(DTM_train)
DTM_train = as.data.frame(DTM_train)
DTM_test = DocumentTermMatrix(corpus_test, control=list( weighting = weightTfIdf, bounds = list(global = c(5, Inf))))
DTM_test = removeSparseTerms(DTM_test, 0.95)
DTM_test
DTM_test = as.matrix(DTM_test)
DTM_test = as.data.frame(DTM_test)
DTM_train = cbind(DTM_train,labels_train)
DTM_test = cbind(DTM_test,labels_test)
labels_train = str(DTM_train$labels_train)
naive_bayes = naiveBayes(as.factor(labels_train) ~ DTM_test, data = DTM_train)
DTM_train = DocumentTermMatrix(corpus_train, control = list(weighting = weightTfIdf, bounds = list(global = c(5, Inf))))
DTM_train = removeSparseTerms(DTM_train, 0.95)
DTM_train
DTM_train = as.matrix(DTM_train)
DTM_train = as.data.frame(DTM_train)
DTM_test = DocumentTermMatrix(corpus_test, control=list( weighting = weightTfIdf, bounds = list(global = c(5, Inf))))
DTM_test = removeSparseTerms(DTM_test, 0.95)
DTM_test
DTM_test = as.matrix(DTM_test)
DTM_test = as.data.frame(DTM_test)
DTM_train = cbind(DTM_train,labels_train)
DTM_test = cbind(DTM_test,labels_test)
naive_bayes = naiveBayes(unlist(labels_train) ~ DTM_test, data = DTM_train)
DTM_train = DocumentTermMatrix(corpus_train, control = list(weighting = weightTfIdf, bounds = list(global = c(5, Inf))))
DTM_train = removeSparseTerms(DTM_train, 0.95)
DTM_train
DTM_train = as.matrix(DTM_train)
DTM_train = as.data.frame(DTM_train)
DTM_test = DocumentTermMatrix(corpus_test, control=list( weighting = weightTfIdf, bounds = list(global = c(5, Inf))))
DTM_test = removeSparseTerms(DTM_test, 0.95)
DTM_test
DTM_test = as.matrix(DTM_test)
DTM_test = as.data.frame(DTM_test)
DTM_train = cbind(DTM_train,unlist(labels_train))
DTM_test = cbind(DTM_test,labels_test)
naive_bayes = naiveBayes(as.factor(labels_train) ~ DTM_test, data = DTM_train)
DTM_train = DocumentTermMatrix(corpus_train, control = list(weighting = weightTfIdf, bounds = list(global = c(5, Inf))))
DTM_train = removeSparseTerms(DTM_train, 0.95)
DTM_train
DTM_train = as.matrix(DTM_train)
DTM_train = as.data.frame(DTM_train)
DTM_test = DocumentTermMatrix(corpus_test, control=list( weighting = weightTfIdf, bounds = list(global = c(5, Inf))))
DTM_test = removeSparseTerms(DTM_test, 0.95)
DTM_test
DTM_test = as.matrix(DTM_test)
DTM_test = as.data.frame(DTM_test)
DTM_train = cbind(DTM_train,unlist(labels_train))
DTM_test = cbind(DTM_test,labels_test)
library(base)
naive_bayes = naiveBayes(as.factor(labels_train) ~ DTM_test, data = DTM_train)
DTM_train = DocumentTermMatrix(corpus_train, control = list(weighting = weightTfIdf, bounds = list(global = c(5, Inf))))
DTM_train = removeSparseTerms(DTM_train, 0.95)
DTM_train
DTM_train = as.matrix(DTM_train)
DTM_train = as.data.frame(DTM_train)
DTM_test = DocumentTermMatrix(corpus_test, control=list( weighting = weightTfIdf, bounds = list(global = c(5, Inf))))
DTM_test = removeSparseTerms(DTM_test, 0.95)
DTM_test
DTM_test = as.matrix(DTM_test)
DTM_test = as.data.frame(DTM_test)
DTM_train = cbind(DTM_train,unlist(labels_train))
DTM_test = cbind(DTM_test,labels_test)
library(base)
naive_bayes = naiveBayes(as.factor(labels_train) ~ unlist(DTM_test), data = DTM_train)
DTM_train = DocumentTermMatrix(corpus_train, control = list(weighting = weightTfIdf, bounds = list(global = c(5, Inf))))
DTM_train = removeSparseTerms(DTM_train, 0.95)
DTM_train
DTM_train = as.matrix(DTM_train)
DTM_train = as.data.frame(DTM_train)
DTM_test = DocumentTermMatrix(corpus_test, control=list( weighting = weightTfIdf, bounds = list(global = c(5, Inf))))
DTM_test = removeSparseTerms(DTM_test, 0.95)
DTM_test
DTM_test = as.matrix(DTM_test)
DTM_test = as.data.frame(DTM_test)
DTM_train = cbind(unlist(DTM_train,labels_train))
DTM_test = cbind(unlist(DTM_test,labels_test))
library(base)
naive_bayes = naiveBayes(as.factor(labels_train) ~ DTM_test, data = DTM_train)
DTM_train = DocumentTermMatrix(corpus_train, control = list(weighting = weightTfIdf, bounds = list(global = c(5, Inf))))
DTM_train = removeSparseTerms(DTM_train, 0.95)
DTM_train
DTM_train = as.matrix(DTM_train)
DTM_train = as.data.frame(DTM_train)
DTM_test = DocumentTermMatrix(corpus_test, control=list( weighting = weightTfIdf, bounds = list(global = c(5, Inf))))
DTM_test = removeSparseTerms(DTM_test, 0.95)
DTM_test
DTM_test = as.matrix(DTM_test)
DTM_test = as.data.frame(DTM_test)
DTM_train = cbind(unlist(DTM_train,labels_train))
DTM_test = cbind(unlist(DTM_test,labels_test))
library(base)
naive_bayes = naiveBayes(data.frame(labels_train) ~ DTM_test, data = DTM_train)
DTM_train = DocumentTermMatrix(corpus_train, control = list(weighting = weightTfIdf, bounds = list(global = c(5, Inf))))
DTM_train = removeSparseTerms(DTM_train, 0.95)
DTM_train
DTM_train = as.matrix(DTM_train)
DTM_train = as.data.frame(DTM_train)
DTM_test = DocumentTermMatrix(corpus_test, control=list( weighting = weightTfIdf, bounds = list(global = c(5, Inf))))
DTM_test = removeSparseTerms(DTM_test, 0.95)
DTM_test
DTM_test = as.matrix(DTM_test)
DTM_test = as.data.frame(DTM_test)
DTM_train = cbind(DTM_train,labels_train)
DTM_test = cbind(DTM_test,labels_test)
naive_bayes = naiveBayes(as.factor(labels_train) ~ DTM_test, data = DTM_train)
DTM_train = DocumentTermMatrix(corpus_train, control = list(weighting = weightTfIdf, bounds = list(global = c(5, Inf))))
DTM_train = removeSparseTerms(DTM_train, 0.95)
DTM_train
DTM_train = as.matrix(DTM_train)
DTM_train = as.data.frame(DTM_train)
DTM_test = DocumentTermMatrix(corpus_test, control=list( weighting = weightTfIdf, bounds = list(global = c(5, Inf))))
DTM_test = removeSparseTerms(DTM_test, 0.95)
DTM_test
DTM_test = as.matrix(DTM_test)
DTM_test = as.data.frame(DTM_test)
DTM_train = cbind(DTM_train,labels_train)
DTM_test = cbind(DTM_test,labels_test)
naive_bayes = naiveBayes(as.factor(labels_train) ~ as.matrix(DTM_test), data = DTM_train)
DTM_train = DocumentTermMatrix(corpus_train, control = list(weighting = weightTfIdf, bounds = list(global = c(5, Inf))))
DTM_train = removeSparseTerms(DTM_train, 0.95)
DTM_train
DTM_train = as.matrix(DTM_train)
DTM_train = as.data.frame(DTM_train)
DTM_test = DocumentTermMatrix(corpus_test, control=list( weighting = weightTfIdf, bounds = list(global = c(5, Inf))))
DTM_test = removeSparseTerms(DTM_test, 0.95)
DTM_test
DTM_test = as.matrix(DTM_test)
DTM_test = as.data.frame(DTM_test)
DTM_train = cbind(DTM_train,labels_train)
DTM_test = cbind(DTM_test,labels_test)
naive_bayes = naiveBayes(as.matrix(labels_train) ~ as.matrix(DTM_test), data = DTM_train)
DTM_train = DocumentTermMatrix(corpus_train, control = list(weighting = weightTfIdf, bounds = list(global = c(5, Inf))))
DTM_train = removeSparseTerms(DTM_train, 0.95)
DTM_train
DTM_train = as.matrix(DTM_train)
DTM_train = as.data.frame(DTM_train)
DTM_test = DocumentTermMatrix(corpus_test, control=list( weighting = weightTfIdf, bounds = list(global = c(5, Inf))))
DTM_test = removeSparseTerms(DTM_test, 0.95)
DTM_test
DTM_test = as.matrix(DTM_test)
DTM_test = as.data.frame(DTM_test)
DTM_train = cbind(DTM_train,labels_train)
DTM_test = cbind(DTM_test,labels_test)
naive_bayes = naiveBayes(as.vector(labels_train) ~ as.matrix(DTM_test), data = DTM_train)
DTM_train = DocumentTermMatrix(corpus_train, control = list(weighting = weightTfIdf, bounds = list(global = c(5, Inf))))
DTM_train = removeSparseTerms(DTM_train, 0.95)
DTM_train
DTM_train = as.matrix(DTM_train)
DTM_train = as.data.frame(DTM_train)
DTM_test = DocumentTermMatrix(corpus_test, control=list( weighting = weightTfIdf, bounds = list(global = c(5, Inf))))
DTM_test = removeSparseTerms(DTM_test, 0.95)
DTM_test
DTM_test = as.matrix(DTM_test)
DTM_test = as.data.frame(DTM_test)
DTM_train = cbind(DTM_train,labels_train)
DTM_test = cbind(DTM_test,labels_test)
naive_bayes = naiveBayes(as.vector(labels_train) ~ as.vector(DTM_test), data = DTM_train)
DTM_train = DocumentTermMatrix(corpus_train, control = list(weighting = weightTfIdf, bounds = list(global = c(5, Inf))))
DTM_train = removeSparseTerms(DTM_train, 0.95)
DTM_train
DTM_train = as.matrix(DTM_train)
DTM_train = as.data.frame(DTM_train)
DTM_test = DocumentTermMatrix(corpus_test, control=list( weighting = weightTfIdf, bounds = list(global = c(5, Inf))))
DTM_test = removeSparseTerms(DTM_test, 0.95)
DTM_test
DTM_test = as.matrix(DTM_test)
DTM_test = as.data.frame(DTM_test)
DTM_train = cbind(DTM_train,labels_train)
DTM_test = cbind(DTM_test,labels_test)
naive_bayes = naiveBayes(as.factor(labels_train) ~ as.vector(DTM_test), data = DTM_train)
DTM_train = DocumentTermMatrix(corpus_train, control = list(weighting = weightTfIdf, bounds = list(global = c(5, Inf))))
DTM_train = removeSparseTerms(DTM_train, 0.95)
DTM_train
DTM_train = as.matrix(DTM_train)
DTM_train = as.data.frame(DTM_train)
DTM_test = DocumentTermMatrix(corpus_test, control=list( weighting = weightTfIdf, bounds = list(global = c(5, Inf))))
DTM_test = removeSparseTerms(DTM_test, 0.95)
DTM_test
DTM_test = as.matrix(DTM_test)
DTM_test = as.data.frame(DTM_test)
DTM_train = cbind(DTM_train,labels_train)
DTM_test = cbind(DTM_test,labels_test)
naive_bayes = naiveBayes(labels_train ~ as.matrix(DTM_test), data = DTM_train)
DTM_train = cbind(DTM_train,labels_train)
DTM_test = cbind(DTM_test,labels_test)
naive_bayes = naiveBayes(as.factor(labels_train) ~ ., DTM_train)
naive_bayes = naiveBayes(as.factor(labels_train) ~ ., data = DTM_train)
naive_bayes = naiveBayes(as.factor(labels_train) ~ ., data = DTM_train)
naive_bayes = naiveBayes(as.factor(labels_train) ~ DTM_test, data = DTM_train)
